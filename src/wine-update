#!/bin/sh

#
# This tool is now depricated
# I will update it when I have more time, it will install some old lutris wine builds
# to save compability with old software
#

echo "DEPRICATED! Please don't use this tool!"
echo "If you want old wine, intall Lutris buils from https://lutris.net/files/runners/ in opt and use wine-wrapper"
exit

. /usr/local/lib/wine_helper/wine_helper_global.shlib
. $conf

LIST=/usr/local/etc/wine_helper/sources.list
CACHE=$HOME/.cache/wine

getUpdate()
{
	echo -n "Getting updates..."
	
	[ ! -d "$CACHE" ] && mkdir $CACHE
	cd $CACHE
	
	# pol
	while read -r LINE; do
		[ "$(echo $LINE | cut -c1)" = "#" ] && continue
		[ -f "$(basename $LINE)" ] && rm "$(basename $LINE)"
		curl --silent $LINE -o "$(basename $LINE)"
	done < $LIST
	
	# lutris
	if [ -f "runners" ]; then
		cat runners | html2text | cut -d' ' -f1 | grep wine | grep "$(uname -m)" > "runners.lst"		
		rm runners
	
		while read LINE; do 
			echo "$LINE;$(echo $LINE | sed 's/wine-//g;s/-x86_64.tar.gz//g');" >> runners.lst.bak
		done < runners.lst
	
		rm runners.lst
		mv runners.lst.bak runners.lst
	fi
	
	echo " Done."
}

getSearch()
{
	if [ -z "$1" ]; then
		echo "search [wine ver]"
		exit 0
	fi
	
	for file in $CACHE/*.lst; do
		echo $file
		grep -F $1 $file | cut -d':' -f2 | cut -d';' -f2
	done
}

getInstall()
{
	if [ -z "$1" ] || [ -z "$2" ]; then
		echo "install [package_name] [list_name]"
		exit 0
	fi
	
	if [ ! -f "$CACHE/$2" ]; then
		echo "No list named $2."
		exit 0
	fi
	
	cd $CACHE
	
	package=$(grep ';'$1';' $CACHE/$2)
	[ -z $package ] && echo "No such package $1" && exit 0
	
	echo -n "Downloading package..."
	
	list=$(echo $2 | sed 's/.lst//g')
	url=$(cat $LIST | sed 's/.lst//g' | grep $list)
	file=$(echo $package | cut -d':' -f2 | cut -d';' -f1)
	
	[ ! -d "archive" ] && mkdir $CACHE/archive
	
	if [ ! -f "archive/wine_$1" ]; then
		rm -rf archive/wine_$1
		rm -rf archive/*wine-$1*.tar.gz
	fi
	
	cd archive/
	mkdir wine_$1
	cd wine_$1
	
	wget "$url/$file"
	
	echo " Done!"
	
	echo -n "Extracting package..."
	
	tar xf $file
	
	if [ -d "wineversion" ]; then # pol archive
		mv wineversion/$1 wine_$1
	
		rm -rf wineversion
		rm -rf playonlinux
		rm -rf files
	else
		mv $1-"$(uname -m)" wine_$1
	fi
	
	echo " Done!"
	
	echo -n "Installing package..."
	
	sudo cp -r wine_$1 $dir
	
	echo " Done!"
}

if [ "$1" = "-v" ]; then
	echo "WINE helper version is $VER"
	exit 0
elif [ "$1" = "-h" ]; then
	help
	exit 0
elif [ "$1" = "install" ]; then
	getInstall $2 $3
elif [ "$1" = "update" ]; then
	getUpdate
elif [ "$1" = "search" ]; then
	getSearch $2
fi
