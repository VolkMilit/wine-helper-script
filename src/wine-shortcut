#!/bin/sh

. /usr/local/lib/wine_helper/wine_helper_global.shlib

# horrible hacks starts here

if [ "$1" = "-a" ] || [ "$1" = "--auto" ]; then
	ind=0
	num=0
	prefix=".wine_tesv" #need to be configurable
	
	#Yeah, I dunno.
	#for i in $exe_list
	#mess up files with spaces, so I write this horrible hack.
	find . -maxdepth 1 -type f -name "*.exe" | sed 's/\.\///g' > /tmp/wine_exe
	
	if [ -z $2 ]; then
		echo "You did't specify exe path. Choose one of these:"
		
		while read LINE; do 
			echo $((ind=ind+1)) $LINE; 
		done < /tmp/wine_exe
		
		read num
		exe=$(awk 'NR=='$num < /tmp/wine_exe)
		rm /tmp/wine_exe
	else
		exe=$2
	fi
	
	name=$(basename "${PWD}")
	_pwd="${PWD}"
	
	#So, I need to explain what happens here:
	#by default many engines keep exe files in subdirs, and I get name of the game from base dir.
	#For example Dark Souls I and II and Unreal Engine games keeps their files in DATA, Game and System subdirectories
	#to avoid this we need to cd on one level up.
	#It's a hack, yep. I don't know hot to do it in "nice" way with POSIX sh. Of course I could parse $pwd, but, naah, too hard.
	if [ "$name" = "Game" ] || [ "$name" = "DATA" ] || [ "$name" = "System" ] || [ "$name" = "Win32" ]; then
		cd ..
		name=$(basename "${PWD}")
		
		if [ "$name" = "Binaries" ]; then # special for unreal engine 3.5
			cd ..
			name=$(basename "${PWD}")
		fi
		
		cd "${_pwd}"
	fi
	
	
	#Not all but many GOG games doesn't have valuble icon of game. I don't like to install ink files in menu, 
	#so there is no icon for me. But, lucky me, PE executable have manifest, that contains icon.
	#We just need 7z to extract PE.
	#Ether way, we can search for icon in game directory and\or in $HOME/.local/share/icons/hicolor/32x32/apps
	
	icon=$(find $HOME/.local/share/icons/hicolor/32x32/apps -name "*$(echo $exe | sed 's/.exe//g').0.png")
	
	if [ -z "$icon" ]; then
		if [ -f "${PWD}/icon.png" ]; then #just in case
			icon=${PWD}/icon.png
		elif [ -f "${PWD}/icon.ico" ]; then
			convert "${PWD}/icon.ico" "${PWD}/icon.png"
			icon=${PWD}/icon.png
		elif [ "$(ls | grep -i ico)" != "" ]; then
			ii=$(ls | grep -i ico | head -n1)
			iipng=$(echo $ii | sed 's/.ico/.png/')
			convert "${PWD}/$ii" "${PWD}/$iipng"
			icon=${PWD}/$iipng
		else
			mkdir wine-exe
			cp $exe wine-exe
			cd wine-exe
			7z x $exe -y
			
			# some apps keep icons in 1033 some in 0
			# as example id Tech 5 and 6 games have icons in 1033
			if [ -d ".rsrc/1033/ICON" ]; then
				cd ".rsrc/1033/ICON"
				convert $(ls -1 | sort -nu | head -n1) icon.png
			elif [ -d ".rsrc/ICON" ]; then
				cd ".rsrc/ICON"
				convert $(ls -1 | sort -nu | head -n1) icon.png
			else
				cd ".rsrc/0/ICON"
				convert $(ls -1 | sort -nu | tail -1) icon.png
			fi
			
			cp icon.png "${_pwd}"
			cd "${_pwd}"
			
			rm -rf wine-exe
			icon="${PWD}/icon.png"
		fi
	fi
		
elif [ "$1" = "" ]; then
	help
	exit 0
else
	for i in "$@"; do
		case $i in
			-n=*|--name=*)
			name="${i#*=}"
			shift
			;;
		
			-e=*|--exec=*)
			exe="${i#*=}"
			shift
			;;
		
			-i=*|--icon=*)
			icon="${i#*=}"
			shift
			;;
		
			-p=*|--prefix=*)
			prefix="${i#*=}"
			shift
			;;
		
			-h|--help)
			help
			exit 0
			;;
			
			*)
			help
			exit 0
			;;
	esac
	done
fi

#Unity specific, better works in wine
options=""
if [ -d "${PWD}/$(echo $exe | sed 's/.exe//g')_Data" ]; then
	[ "$unity_opengl" = "true" ] && options="-force-glcore"
	[ "$unity_d3d11_single" = "true" ] && options="-force-d3d11"
	[ "$unity_d3d11" = "true" ] && options="-force-d3d11-no-singlethreaded"
fi

file="$HOME/.local/share/applications/$(echo $name | sed -e 's/ /_/g').desktop"

touch $file

cat > $file <<EOF
[Desktop Entry]
Encoding=UTF-8
Name=$name
Exec=sh -c 'cd "${PWD}"; wine -d -p=$prefix $exe $options'
Icon=$icon
Categories=Game;

EOF
